// Autogenerated, do not edit

#include <fonts/GeneratedFont.hpp>

FONT_TABLE_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::GlyphNode glyphs_Pretendard_Regular_28_4bpp[] FONT_TABLE_LOCATION_FLASH_ATTRIBUTE = {
    {     0, 0x0020,   0,   0,   0,   0,   7,   0,   0, 0x00 }, // space
    {     0, 0x002D,  10,   3,  10,   1,  12,   0,  16, 0x00 }, // hyphen
    {    15, 0x0030,  15,  20,  20,   1,  17,   0,   0, 0x00 }, // zero
    {   175, 0x0031,   8,  20,  20,   1,  12,  16,   5, 0x00 }, // one
    {   255, 0x0032,  14,  20,  20,   1,  16,  21,   1, 0x00 }, // two
    {   395, 0x0033,  15,  20,  20,   1,  17,   0,   0, 0x00 }, // three
    {   555, 0x0034,  16,  20,  20,   1,  17,  22,   7, 0x00 }, // four
    {   715, 0x0035,  14,  20,  20,   2,  17,   0,   0, 0x00 }, // five
    {   855, 0x0036,  15,  20,  20,   1,  17,   0,   0, 0x00 }, // six
    {  1015, 0x0037,  14,  20,  20,   1,  15,  29,   4, 0x00 }, // seven
    {  1155, 0x0038,  15,  20,  20,   1,  17,   0,   0, 0x00 }, // eight
    {  1315, 0x0039,  15,  20,  20,   1,  17,   0,   0, 0x00 }, // nine
    {  1475, 0x003F,  12,  20,  20,   1,  13,   0,   0, 0x00 }, // question
    {  1595, 0x0041,  18,  20,  20,   0,  18,  33,  21, 0x00 }, // A
    {  1775, 0x0042,  14,  20,  20,   2,  17,   0,   0, 0x00 }, // B
    {  1915, 0x0043,  18,  20,  20,   1,  19,  54,   7, 0x00 }, // C
    {  2095, 0x0044,  16,  20,  20,   2,  19,   0,   0, 0x00 }, // D
    {  2255, 0x0045,  13,  20,  20,   2,  16,   0,   0, 0x00 }, // E
    {  2395, 0x0046,  13,  20,  20,   2,  16,   0,   0, 0x00 }, // F
    {  2535, 0x0047,  18,  20,  20,   1,  20,  61,   7, 0x00 }, // G
    {  2715, 0x0048,  16,  20,  20,   2,  20,   0,   0, 0x00 }, // H
    {  2875, 0x0049,   3,  20,  20,   2,   7,   0,   0, 0x00 }, // I
    {  2915, 0x004A,  12,  20,  20,   1,  14,  68,  12, 0x00 }, // J
    {  3035, 0x004B,  15,  20,  20,   2,  17,   0,   0, 0x00 }, // K
    {  3195, 0x004C,  12,  20,  20,   2,  15,   0,   0, 0x00 }, // L
    {  3315, 0x004D,  20,  20,  20,   2,  24,   0,   0, 0x00 }, // M
    {  3515, 0x004E,  16,  20,  20,   2,  20,   0,   0, 0x00 }, // N
    {  3675, 0x004F,  18,  20,  20,   1,  20,  80,   7, 0x00 }, // O
    {  3855, 0x0050,  14,  20,  20,   2,  17,   0,   0, 0x00 }, // P
    {  3995, 0x0051,  18,  22,  20,   1,  20,  87,   7, 0x00 }, // Q
    {  4193, 0x0052,  15,  20,  20,   2,  17,   0,   0, 0x00 }, // R
    {  4353, 0x0053,  15,  20,  20,   1,  17,   0,   0, 0x00 }, // S
    {  4513, 0x0054,  15,  20,  20,   1,  17,  94,  27, 0x00 }, // T
    {  4673, 0x0055,  16,  20,  20,   2,  20,   0,   0, 0x00 }, // U
    {  4833, 0x0056,  18,  20,  20,   0,  18, 121,  16, 0x00 }, // V
    {  5013, 0x0057,  26,  20,  20,   0,  26, 137,  11, 0x00 }, // W
    {  5273, 0x0058,  17,  20,  20,   0,  17, 148,   4, 0x00 }, // X
    {  5453, 0x0059,  18,  20,  20,   0,  18, 152,  21, 0x00 }, // Y
    {  5633, 0x005A,  15,  20,  20,   1,  17, 173,   2, 0x00 }, // Z
    {  5793, 0x0061,  13,  15,  15,   1,  15, 175,   5, 0x00 }, // a
    {  5898, 0x0062,  14,  20,  20,   2,  17,   0,   0, 0x00 }, // b
    {  6038, 0x0063,  13,  15,  15,   1,  15, 180,  13, 0x00 }, // c
    {  6143, 0x0064,  14,  20,  20,   1,  17, 193,  13, 0x00 }, // d
    {  6283, 0x0065,  14,  15,  15,   1,  15, 206,  13, 0x00 }, // e
    {  6388, 0x0066,   9,  21,  21,   0,   9, 219,   1, 0x00 }, // f
    {  6493, 0x0067,  14,  21,  15,   1,  16, 220,  13, 0x00 }, // g
    {  6640, 0x0068,  13,  20,  20,   1,  16,   0,   0, 0x00 }, // h
    {  6780, 0x0069,   4,  21,  21,   1,   6, 233,   2, 0x00 }, // i
    {  6822, 0x006A,   6,  27,  21,  -1,   6, 235,   1, 0x00 }, // j
    {  6903, 0x006B,  14,  20,  20,   1,  14,   0,   0, 0x00 }, // k
    {  7043, 0x006C,   4,  20,  20,   1,   6,   0,   0, 0x00 }, // l
    {  7083, 0x006D,  21,  15,  15,   1,  23, 236,   3, 0x00 }, // m
    {  7248, 0x006E,  13,  15,  15,   1,  16, 239,   3, 0x00 }, // n
    {  7353, 0x006F,  14,  15,  15,   1,  16, 242,  13, 0x00 }, // o
    {  7458, 0x0070,  14,  21,  15,   1,  16, 255,   3, 0x00 }, // p
    {  7605, 0x0071,  14,  21,  15,   1,  16,   2,  13, 0x01 }, // q
    {  7752, 0x0072,   9,  15,  15,   1,  10,  15,   3, 0x01 }, // r
    {  7827, 0x0073,  12,  15,  15,   1,  14,  18,   6, 0x01 }, // s
    {  7917, 0x0074,   9,  19,  19,   0,  10,  24,   2, 0x01 }, // t
    {  8012, 0x0075,  13,  15,  15,   1,  15,  26,   4, 0x01 }, // u
    {  8117, 0x0076,  14,  15,  15,   0,  15,  30,  11, 0x01 }, // v
    {  8222, 0x0077,  21,  15,  15,   0,  22,  41,   2, 0x01 }, // w
    {  8387, 0x0078,  13,  15,  15,   1,  14,  43,   5, 0x01 }, // x
    {  8492, 0x0079,  14,  21,  15,   0,  15,  48,  11, 0x01 }, // y
    {  8639, 0x007A,  13,  15,  15,   1,  14,  59,   2, 0x01 }, // z
    {     0, 0xC6D4,  21,  25,  23,   1,  24,   0,   0, 0x00 }, // uniC6D4
    {   275, 0xC77C,  21,  25,  23,   1,  24,   0,   0, 0x00 }  // uniC77C
};

// Pretendard_Regular_28_4bpp
FONT_TABLE_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::GlyphNode glyphs_Pretendard_Regular_28_4bpp[] FONT_TABLE_LOCATION_FLASH_ATTRIBUTE;
FONT_GLYPH_LOCATION_FLASH_PRAGMA
KEEP extern const uint8_t unicodes_Pretendard_Regular_28_4bpp_0[] FONT_GLYPH_LOCATION_FLASH_ATTRIBUTE;
FONT_GLYPH_LOCATION_FLASH_PRAGMA
KEEP extern const uint8_t unicodes_Pretendard_Regular_28_4bpp_24[] FONT_GLYPH_LOCATION_FLASH_ATTRIBUTE;
FONT_SEARCHTABLE_LOCATION_FLASH_PRAGMA
KEEP extern const uint8_t* const unicodes_Pretendard_Regular_28_4bpp[] FONT_SEARCHTABLE_LOCATION_FLASH_ATTRIBUTE = {
    unicodes_Pretendard_Regular_28_4bpp_0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    unicodes_Pretendard_Regular_28_4bpp_24
};
FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_Pretendard_Regular_28_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_Pretendard_Regular_28_4bpp();

touchgfx::GeneratedFont& getFont_Pretendard_Regular_28_4bpp()
{
    static touchgfx::GeneratedFont Pretendard_Regular_28_4bpp(glyphs_Pretendard_Regular_28_4bpp, 67, 34, 28, 0, 0, 4, 1, 1, 1, unicodes_Pretendard_Regular_28_4bpp, kerning_Pretendard_Regular_28_4bpp, 63, 0, 0, 0);
    return Pretendard_Regular_28_4bpp;
}
