/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREENONTIMESETTINGVIEWBASE_HPP
#define SCREENONTIMESETTINGVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screenontimesetting_screen/screenontimeSettingPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/scrollers/ScrollWheelWithSelectionStyle.hpp>
#include <gui/containers/setting_screenontime_notselected.hpp>
#include <gui/containers/setting_screenontime_selected.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <gui/containers/batteryprogress_container.hpp>

class screenontimeSettingViewBase : public touchgfx::View<screenontimeSettingPresenter>
{
public:
    screenontimeSettingViewBase();
    virtual ~screenontimeSettingViewBase();
    virtual void setupScreen();

    virtual void scrollWheel1UpdateItem(setting_screenontime_notselected& item, int16_t itemIndex)
    {
        // Override and implement this function in screenontimeSetting
    }

    virtual void scrollWheel1UpdateCenterItem(setting_screenontime_selected& item, int16_t itemIndex)
    {
        // Override and implement this function in screenontimeSetting
    }

    /*
     * Custom Actions
     */
    virtual void changeScreenOnTime()
    {
        // Override and implement this function in Screen1
    }
    

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image background;
    touchgfx::TextArea ontime_label;
    touchgfx::ScrollWheelWithSelectionStyle scrollWheel1;
    touchgfx::DrawableListItems<setting_screenontime_notselected, 6> scrollWheel1ListItems;
    touchgfx::DrawableListItems<setting_screenontime_selected, 2> scrollWheel1SelectedListItems;
    touchgfx::Image scrollwheel_contour_image;
    touchgfx::Button ontime_done_button;
    touchgfx::TextArea ontime_done_label;
    touchgfx::Button buttonfornothing;
    batteryprogress_container batteryprogress_container1;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<screenontimeSettingViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;
    touchgfx::Callback<screenontimeSettingViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SCREENONTIMESETTINGVIEWBASE_HPP
