/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SETSTUMULTIMEVIEWBASE_HPP
#define SETSTUMULTIMEVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/setstumultime_screen/setStumulTimePresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/scrollers/ScrollWheelWithSelectionStyle.hpp>
#include <gui/containers/setting_stimul_time_notselected.hpp>
#include <gui/containers/setting_stimul_time_selected.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <gui/containers/batteryprogress_container.hpp>
#include <gui/containers/lte_status_container.hpp>
#include <touchgfx/widgets/Button.hpp>

class setStumulTimeViewBase : public touchgfx::View<setStumulTimePresenter>
{
public:
    setStumulTimeViewBase();
    virtual ~setStumulTimeViewBase();
    virtual void setupScreen();

    virtual void scrollWheel1UpdateItem(setting_stimul_time_notselected& item, int16_t itemIndex)
    {
        // Override and implement this function in setStumulTime
    }

    virtual void scrollWheel1UpdateCenterItem(setting_stimul_time_selected& item, int16_t itemIndex)
    {
        // Override and implement this function in setStumulTime
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image background;
    touchgfx::ScrollWheelWithSelectionStyle scrollWheel1;
    touchgfx::DrawableListItems<setting_stimul_time_notselected, 6> scrollWheel1ListItems;
    touchgfx::DrawableListItems<setting_stimul_time_selected, 2> scrollWheel1SelectedListItems;
    touchgfx::Image scrollwheel_contour_image;
    touchgfx::TextArea stimulationtime_label;
    batteryprogress_container batteryprogress_container1;
    lte_status_container lte_status_container1;
    touchgfx::Button stimultime_done_button;
    touchgfx::TextArea textArea2;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<setStumulTimeViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;
    touchgfx::Callback<setStumulTimeViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SETSTUMULTIMEVIEWBASE_HPP
