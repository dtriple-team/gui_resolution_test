/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SLEEPSCREENVIEWBASE_HPP
#define SLEEPSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/sleepscreen_screen/SleepScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/containers/progress_indicators/CircleProgress.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <gui/containers/batteryprogress_container.hpp>
#include <gui/containers/lte_status_container.hpp>

class SleepScreenViewBase : public touchgfx::View<SleepScreenPresenter>
{
public:
    SleepScreenViewBase();
    virtual ~SleepScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image background;
    touchgfx::TextArea sleep_label;
    touchgfx::TextAreaWithTwoWildcards sleep_value;
    touchgfx::Button buttonfornothing;
    touchgfx::Box topright_box;
    touchgfx::Image sleep_image;
    touchgfx::CircleProgress sleep_progress;
    touchgfx::PainterRGB565 sleep_progressPainter;
    batteryprogress_container batteryprogress_container1;
    lte_status_container lte_status_container1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t SLEEP_VALUEBUFFER1_SIZE = 3;
    touchgfx::Unicode::UnicodeChar sleep_valueBuffer1[SLEEP_VALUEBUFFER1_SIZE];
    static const uint16_t SLEEP_VALUEBUFFER2_SIZE = 3;
    touchgfx::Unicode::UnicodeChar sleep_valueBuffer2[SLEEP_VALUEBUFFER2_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 3600;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<SleepScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SLEEPSCREENVIEWBASE_HPP
