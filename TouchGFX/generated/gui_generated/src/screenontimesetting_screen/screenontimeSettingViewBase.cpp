/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screenontimesetting_screen/screenontimeSettingViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

screenontimeSettingViewBase::screenontimeSettingViewBase() :
    updateItemCallback(this, &screenontimeSettingViewBase::updateItemCallbackHandler),
    buttonCallback(this, &screenontimeSettingViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 280);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
    add(background);

    ontime_label.setPosition(0, 6, 240, 25);
    ontime_label.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ontime_label.setLinespacing(0);
    ontime_label.setTypedText(touchgfx::TypedText(T_SCREENONTIME));
    add(ontime_label);

    scrollWheel1.setPosition(22, 56, 197, 148);
    scrollWheel1.setHorizontal(false);
    scrollWheel1.setCircular(false);
    scrollWheel1.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    scrollWheel1.setSwipeAcceleration(12);
    scrollWheel1.setDragAcceleration(12);
    scrollWheel1.setNumberOfItems(6);
    scrollWheel1.setSelectedItemOffset(53);
    scrollWheel1.setOvershootPercentage(75);
    scrollWheel1.setSelectedItemExtraSize(0, 0);
    scrollWheel1.setSelectedItemMargin(0, 0);
    scrollWheel1.setDrawableSize(46, 0);
    scrollWheel1.setDrawables(scrollWheel1ListItems, updateItemCallback,
    
                          scrollWheel1SelectedListItems, updateItemCallback);
    scrollWheel1.animateToItem(3, 0);
    add(scrollWheel1);

    scrollwheel_contour_image.setXY(22, 107);
    scrollwheel_contour_image.setBitmap(touchgfx::Bitmap(BITMAP_SELECTLINE_ID));
    add(scrollwheel_contour_image);

    ontime_done_button.setXY(48, 210);
    ontime_done_button.setBitmaps(touchgfx::Bitmap(BITMAP_RECTANGLE_14_ID), touchgfx::Bitmap(BITMAP_RECTANGLEPRESSED_ID));
    ontime_done_button.setAction(buttonCallback);
    add(ontime_done_button);

    ontime_done_label.setPosition(48, 217, 144, 29);
    ontime_done_label.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ontime_done_label.setLinespacing(0);
    ontime_done_label.setTypedText(touchgfx::TypedText(T_SCREENONTIMEAPPLY));
    add(ontime_done_label);

    buttonfornothing.setXY(0, 0);
    buttonfornothing.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    buttonfornothing.setVisible(false);
    buttonfornothing.setAction(buttonCallback);
    add(buttonfornothing);

    batteryprogress_container1.setXY(0, 0);
    add(batteryprogress_container1);
}

screenontimeSettingViewBase::~screenontimeSettingViewBase()
{

}

void screenontimeSettingViewBase::setupScreen()
{
    scrollWheel1.initialize();
    for (int i = 0; i < scrollWheel1ListItems.getNumberOfDrawables(); i++)
    {
        scrollWheel1ListItems[i].initialize();
    }
    for (int i = 0; i < scrollWheel1SelectedListItems.getNumberOfDrawables(); i++)
    {
        scrollWheel1SelectedListItems[i].initialize();
    }
    batteryprogress_container1.initialize();
}

void screenontimeSettingViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonfornothing)
    {
        //Interaction1
        //When buttonfornothing clicked change screen to screenSetting
        //Go to screenSetting with screen transition towards West
        application().gotoscreenSettingScreenWipeTransitionWest();
    }
    if (&src == &ontime_done_button)
    {
        //Interaction2
        //When ontime_done_button clicked change screen to screenSetting
        //Go to screenSetting with screen transition towards West
        application().gotoscreenSettingScreenWipeTransitionWest();
        //callFunction
        //When ontime_done_button clicked call changeScreenOnTime on screenontimeSetting
        //Call changeScreenOnTime
        changeScreenOnTime();
    }
}

void screenontimeSettingViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &scrollWheel1ListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        setting_screenontime_notselected* cc = (setting_screenontime_notselected*)d;
        scrollWheel1UpdateItem(*cc, itemIndex);
    }
    if (items == &scrollWheel1SelectedListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        setting_screenontime_selected* cc = (setting_screenontime_selected*)d;
        scrollWheel1UpdateCenterItem(*cc, itemIndex);
    }
}
