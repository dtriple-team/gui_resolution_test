/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/setstimulstrength_screen/setStimulStrengthViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

setStimulStrengthViewBase::setStimulStrengthViewBase() :
    updateItemCallback(this, &setStimulStrengthViewBase::updateItemCallbackHandler),
    buttonCallback(this, &setStimulStrengthViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 280);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
    add(background);

    scrollWheel1.setPosition(22, 54, 197, 153);
    scrollWheel1.setHorizontal(false);
    scrollWheel1.setCircular(false);
    scrollWheel1.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    scrollWheel1.setSwipeAcceleration(12);
    scrollWheel1.setDragAcceleration(12);
    scrollWheel1.setNumberOfItems(8);
    scrollWheel1.setSelectedItemOffset(53);
    scrollWheel1.setOvershootPercentage(75);
    scrollWheel1.setSelectedItemExtraSize(0, 0);
    scrollWheel1.setSelectedItemMargin(0, 0);
    scrollWheel1.setDrawableSize(46, 0);
    scrollWheel1.setDrawables(scrollWheel1ListItems, updateItemCallback,
    
                          scrollWheel1SelectedListItems, updateItemCallback);
    scrollWheel1.animateToItem(0, 0);
    add(scrollWheel1);

    scrollwheel_contour_image.setXY(22, 107);
    scrollwheel_contour_image.setBitmap(touchgfx::Bitmap(BITMAP_SELECTLINE_ID));
    add(scrollwheel_contour_image);

    stimulationstrength_label.setPosition(0, 6, 240, 48);
    stimulationstrength_label.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    stimulationstrength_label.setLinespacing(0);
    stimulationstrength_label.setTypedText(touchgfx::TypedText(T_STIMULSTR_LABEL));
    add(stimulationstrength_label);

    batteryprogress_container1.setXY(0, 0);
    add(batteryprogress_container1);

    lte_status_container1.setXY(0, 0);
    add(lte_status_container1);

    stimulstr_done_button.setXY(48, 210);
    stimulstr_done_button.setBitmaps(touchgfx::Bitmap(BITMAP_RECTANGLE_14_ID), touchgfx::Bitmap(BITMAP_RECTANGLEPRESSED_ID));
    stimulstr_done_button.setAction(buttonCallback);
    add(stimulstr_done_button);

    textArea2.setPosition(48, 217, 144, 28);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U6QI));
    add(textArea2);
}

setStimulStrengthViewBase::~setStimulStrengthViewBase()
{

}

void setStimulStrengthViewBase::setupScreen()
{
    scrollWheel1.initialize();
    for (int i = 0; i < scrollWheel1ListItems.getNumberOfDrawables(); i++)
    {
        scrollWheel1ListItems[i].initialize();
    }
    for (int i = 0; i < scrollWheel1SelectedListItems.getNumberOfDrawables(); i++)
    {
        scrollWheel1SelectedListItems[i].initialize();
    }
    batteryprogress_container1.initialize();
    lte_status_container1.initialize();
}

void setStimulStrengthViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &stimulstr_done_button)
    {
        //gotoStimulTimer
        //When stimulstr_done_button clicked change screen to startStimul
        //Go to startStimul with no screen transition
        application().gotostartStimulScreenNoTransition();
    }
}

void setStimulStrengthViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &scrollWheel1ListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        setting_stimul_strength_notselected* cc = (setting_stimul_strength_notselected*)d;
        scrollWheel1UpdateItem(*cc, itemIndex);
    }
    if (items == &scrollWheel1SelectedListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        setting_stimul_strength_selected* cc = (setting_stimul_strength_selected*)d;
        scrollWheel1UpdateCenterItem(*cc, itemIndex);
    }
}
