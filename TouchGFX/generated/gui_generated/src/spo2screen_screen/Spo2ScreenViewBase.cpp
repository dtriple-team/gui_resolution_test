/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/spo2screen_screen/Spo2ScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Spo2ScreenViewBase::Spo2ScreenViewBase() :
    buttonCallback(this, &Spo2ScreenViewBase::buttonCallbackHandler),
    frameCountInteraction5Interval(0)
{
    __background.setPosition(0, 0, 240, 280);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
    add(background);

    spo2_label.setPosition(0, 4, 240, 30);
    spo2_label.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    spo2_label.setLinespacing(0);
    spo2_label.setTypedText(touchgfx::TypedText(T_SPO2TEXT));
    add(spo2_label);

    spo2_value.setPosition(0, 215, 240, 45);
    spo2_value.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    spo2_value.setLinespacing(0);
    Unicode::snprintf(spo2_valueBuffer, SPO2_VALUE_SIZE, "%s", touchgfx::TypedText(T_CURSPO2VALUE).getText());
    spo2_value.setWildcard(spo2_valueBuffer);
    spo2_value.setTypedText(touchgfx::TypedText(T_CURSPO2));
    add(spo2_value);

    topright_box.setPosition(185, 0, 55, 33);
    topright_box.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(topright_box);

    spo2_detail_button.setXY(70, 75);
    spo2_detail_button.setBitmaps(touchgfx::Bitmap(BITMAP_SPO2_ICON_ID), touchgfx::Bitmap(BITMAP_SPO2_ICON_ID));
    add(spo2_detail_button);

    buttonfornothing.setXY(0, 0);
    buttonfornothing.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    buttonfornothing.setVisible(false);
    buttonfornothing.setAction(buttonCallback);
    add(buttonfornothing);

    batteryprogress_container1.setXY(0, 0);
    add(batteryprogress_container1);

    lte_status_container1.setXY(0, 0);
    add(lte_status_container1);
}

Spo2ScreenViewBase::~Spo2ScreenViewBase()
{

}

void Spo2ScreenViewBase::setupScreen()
{
    batteryprogress_container1.initialize();
    lte_status_container1.initialize();
}

void Spo2ScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonfornothing)
    {
        //Interaction2
        //When buttonfornothing clicked change screen to HeartrateScreen
        //Go to HeartrateScreen with screen transition towards West
        application().gotoHeartrateScreenScreenWipeTransitionWest();
        //Interaction3
        //When buttonfornothing clicked change screen to SleepScreen
        //Go to SleepScreen with screen transition towards East
        application().gotoSleepScreenScreenWipeTransitionEast();
        //Interaction4
        //When buttonfornothing clicked change screen to HomeScreenWithBiodata
        //Go to HomeScreenWithBiodata with screen transition towards East
        application().gotoHomeScreenWithBiodataScreenWipeTransitionEast();
    }
}

void Spo2ScreenViewBase::handleTickEvent()
{
    frameCountInteraction5Interval++;
    if(frameCountInteraction5Interval == TICK_INTERACTION5_INTERVAL)
    {
        //Interaction5
        //When every N tick call changeSpo2Val on Spo2Screen
        //Call changeSpo2Val
        changeSpo2Val();
        frameCountInteraction5Interval = 0;
    }
}
