/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */

#include <stdarg.h>
#include <touchgfx/TextProvider.hpp>
#include <touchgfx/Texts.hpp>
#include <touchgfx/TypedText.hpp>
#include <touchgfx/Unicode.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
    va_end(pArg);
    return width;
}

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
    va_end(pArg);
    return width;
}

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
    {
        substituteGlyphs();
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
}

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
    va_list pArg;
    va_start(pArg, format);
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
    va_end(pArg);
}

// Default TypedTextDatabase
extern const touchgfx::TypedText::TypedTextData* const typedTextDatabaseArray[];

TEXT_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::Unicode::UnicodeChar texts_all_languages[] TEXT_LOCATION_FLASH_ATTRIBUTE = {
    0xa, 0x45, 0x73, 0x74, 0xe1, 0x73, 0x20, 0x73, 0x65, 0x67, 0x75, 0x72, 0x6f, 0x20, 0x64, 0x65, 0x20, 0x71, 0x75, 0x65, 0xa, 0x74, 0xfa, 0x20, 0x71, 0x75, 0x69, 0x65, 0x72, 0x6f, 0x20, 0x61, 0x70, 0x61, 0x67, 0x61, 0x72, 0xa, 0xbf, 0x65, 0x73, 0x74, 0x65, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x6f, 0x3f, 0x0, // @0 "\nEst?s seguro de que\nt? quiero apagar\n?este dispositivo?"
    0x41, 0x72, 0x65, 0x20, 0x79, 0x6f, 0x75, 0x20, 0x73, 0x75, 0x72, 0x65, 0x20, 0x79, 0x6f, 0x75, 0xa, 0x77, 0x61, 0x6e, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x66, 0x66, 0xa, 0x74, 0x68, 0x69, 0x73, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x3f, 0x0, // @57 "Are you sure you\nwant to turn off\nthis device?"
    0x53, 0x65, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x65, 0x72, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x65, 0x78, 0x69, 0xf3, 0x6e, 0xa, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x2e, 0x0, // @104 "Se requiere conexi?n\nBluetooth."
    0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0xa, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x2e, 0x0, // @136 "Bluetooth connection\nrequired."
    0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x63, 0x69, 0xf3, 0x6e, 0x20, 0x64, 0x65, 0x6c, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x6f, 0x0, // @167 "Informaci?n del dispositivo"
    0x43, 0x61, 0x72, 0x67, 0x61, 0x64, 0x6f, 0x72, 0xa, 0x64, 0x65, 0x73, 0x63, 0x6f, 0x6e, 0x65, 0x63, 0x74, 0x61, 0x64, 0x6f, 0x2e, 0x0, // @195 "Cargador\ndesconectado."
    0x46, 0x75, 0x65, 0x72, 0x7a, 0x61, 0x20, 0x64, 0x65, 0xa, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x63, 0x69, 0xf3, 0x6e, 0x0, // @218 "Fuerza de\nEstimulaci?n"
    0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x63, 0x69, 0xf3, 0x6e, 0x20, 0x62, 0x69, 0x6f, 0x6d, 0xe9, 0x74, 0x72, 0x69, 0x63, 0x61, 0x0, // @241 "Informaci?n biom?trica"
    0x49, 0x6e, 0x69, 0x63, 0x69, 0x6f, 0x20, 0x64, 0x65, 0xa, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x63, 0x69, 0xf3, 0x6e, 0x0, // @264 "Inicio de\nEstimulaci?n"
    0x54, 0x69, 0x65, 0x6d, 0x70, 0x6f, 0x20, 0x64, 0x65, 0xa, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x63, 0x69, 0xf3, 0x6e, 0x0, // @287 "Tiempo de\nEstimulaci?n"
    0x42, 0x72, 0x69, 0x6c, 0x6c, 0x6f, 0x20, 0x64, 0x65, 0x20, 0x6c, 0x61, 0x20, 0x70, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x0, // @310 "Brillo de la pantalla"
    0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0xa, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x2e, 0x0, // @332 "Charger\ndisconnected."
    0x43, 0x69, 0x63, 0x6c, 0x6f, 0x20, 0x64, 0x65, 0xa, 0x63, 0x6f, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x63, 0x69, 0x6f, 0x6e, 0x0, // @354 "Ciclo de\ncomunicacion"
    0x43, 0x69, 0x63, 0x6c, 0x6f, 0x20, 0x64, 0x65, 0x20, 0x63, 0x6f, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x63, 0x69, 0x6f, 0x6e, 0x0, // @376 "Ciclo de comunicacion"
    0x45, 0x6e, 0x63, 0x75, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x20, 0x6d, 0x69, 0x20, 0x74, 0x65, 0x6c, 0xe9, 0x66, 0x6f, 0x6e, 0x6f, 0x0, // @398 "Encuentra mi tel?fono"
    0x41, 0x6c, 0x65, 0x72, 0x74, 0x61, 0x20, 0x64, 0x65, 0xa, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x0, // @420 "Alerta de\nEmergencia"
    0x53, 0x74, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xa, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x0, // @441 "Stimulation\nStrength"
    0x43, 0x61, 0x72, 0x67, 0x61, 0x64, 0x6f, 0x72, 0xa, 0x63, 0x6f, 0x6e, 0x65, 0x63, 0x74, 0x61, 0x64, 0x6f, 0x2e, 0x0, // @462 "Cargador\nconectado."
    0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xa, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x0, // @482 "Communication\nCycle"
    0x2, 0xc2dc, 0xac04, 0xa, 0x2, 0xbd84, 0x0, // @502 "<>??\n<>?"
    0x2, 0xc2dc, 0xac04, 0x20, 0x2, 0xbd84, 0x0, // @509 "<>?? <>?"
    0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x72, 0xa, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x2e, 0x0, // @516 "Charger\nconnected."
    0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x63, 0x69, 0xf3, 0x6e, 0x20, 0x57, 0x69, 0x46, 0x69, 0x0, // @535 "Configuraci?n WiFi"
    0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x63, 0x69, 0xf3, 0x6e, 0x20, 0x64, 0x65, 0x20, 0x72, 0x65, 0x64, 0x0, // @554 "Informaci?n de red"
    0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x63, 0x69, 0xf3, 0x6e, 0x20, 0x57, 0x69, 0x46, 0x69, 0x0, // @573 "configuraci?n WiFi"
    0x6e, 0xfa, 0x6d, 0x65, 0x72, 0x6f, 0x20, 0x64, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x69, 0x6f, 0x0, // @592 "n?mero de servicio"
    0x2, 0x68, 0xa, 0x2, 0x6d, 0x0, // @611 "<>h\n<>m"
    0x2, 0x68, 0x20, 0x2, 0x6d, 0x0, // @617 "<>h <>m"
    0x2, 0xc6d4, 0x20, 0x2, 0xc77c, 0x0, // @623 "<>? <>?"
    0x43, 0x61, 0xed, 0x64, 0x61, 0x73, 0xa, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x61, 0x64, 0x61, 0x73, 0x0, // @629 "Ca?das\ndetectadas"
    0x4c, 0x61, 0x74, 0x69, 0x64, 0x6f, 0x73, 0xa, 0x43, 0x61, 0x72, 0x64, 0xed, 0x61, 0x63, 0x6f, 0x73, 0x0, // @647 "Latidos\nCard?acos"
    0x4e, 0x6f, 0x20, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x69, 0x6f, 0x6e, 0x65, 0x73, 0x0, // @665 "No Notificaciones"
    0x50, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x20, 0x61, 0x20, 0x74, 0x69, 0x65, 0x6d, 0x70, 0x6f, 0x0, // @683 "Pantalla a tiempo"
    0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x0, // @701 "Screen brightness"
    0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x20, 0x57, 0x69, 0x46, 0x69, 0x2e, 0x2e, 0x2e, 0x0, // @719 "Searching WiFi..."
    0x53, 0x6f, 0x6e, 0x69, 0x64, 0x6f, 0x20, 0x79, 0x20, 0x68, 0xe1, 0x70, 0x74, 0x69, 0x63, 0x6f, 0x73, 0x0, // @737 "Sonido y h?pticos"
    0x53, 0x74, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xa, 0x53, 0x74, 0x61, 0x72, 0x74, 0x0, // @755 "Stimulation\nStart"
    0x6e, 0x6f, 0x6d, 0x62, 0x72, 0x65, 0x20, 0x64, 0x65, 0x6c, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x6f, 0x0, // @773 "nombre del modelo"
    0x42, 0x75, 0x73, 0x63, 0x61, 0x6e, 0x64, 0x6f, 0x20, 0x57, 0x69, 0x46, 0x69, 0x2e, 0x2e, 0x2e, 0x0, // @791 "Buscando WiFi..."
    0x4e, 0x6f, 0x20, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x0, // @808 "No notifications"
    0x53, 0x74, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xa, 0x54, 0x69, 0x6d, 0x65, 0x0, // @825 "Stimulation\nTime"
    0x2, 0x2d, 0x2, 0x0, // @842 "<>-<>"
    0x2, 0x3a, 0x2, 0x0, // @846 "<>:<>"
    0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0xa, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x0, // @850 "Emergency\nAlert"
    0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x20, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x0, // @866 "Emergency Alert"
    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x20, 0x26, 0x20, 0x48, 0x61, 0x70, 0x74, 0x69, 0x63, 0x73, 0x0, // @882 "Sound & Haptics"
    0x6e, 0xfa, 0x6d, 0x65, 0x72, 0x6f, 0x20, 0x64, 0x65, 0x20, 0x73, 0x65, 0x72, 0x69, 0x65, 0x0, // @898 "n?mero de serie"
    0xbe14, 0xb8e8, 0xd22c, 0xc2a4, 0x20, 0xc5f0, 0xacb0, 0xc774, 0xa, 0xd544, 0xc694, 0xd569, 0xb2c8, 0xb2e4, 0x2e, 0x0, // @914 "???? ???\n?????."
    0xc0b0, 0xc18c, 0xd3ec, 0xd654, 0xb3c4, 0x20, 0x2, 0x20, 0x25, 0x0, // @930 "????? <> %"
    0xc2ec, 0xbc15, 0xc218, 0x20, 0x2, 0x20, 0x62, 0x70, 0x6d, 0x0, // @940 "??? <> bpm"
    0xc774, 0x20, 0xae30, 0xae30, 0xb97c, 0xa, 0xc885, 0xb8cc, 0xd558, 0xc2dc, 0xaca0, 0xc2b5, 0xb2c8, 0xae4c, 0x3f, 0x0, // @950 "? ???\n?????????"
    0x2, 0x2, 0x0, // @966 "<><>"
    0x42, 0x69, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x20, 0x64, 0x61, 0x74, 0x61, 0x0, // @969 "Biometric data"
    0x46, 0x61, 0x6c, 0x6c, 0x73, 0x20, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x0, // @984 "Falls Detected"
    0x4f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x20, 0x63, 0x61, 0xed, 0x64, 0x61, 0x73, 0x0, // @999 "Ocurren ca?das"
    0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x0, // @1014 "Screen on time"
    0x69, 0x64, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x63, 0x69, 0xf3, 0x6e, 0x0, // @1029 "id informaci?n"
    0x69, 0x64, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x0, // @1044 "id information"
    0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x0, // @1059 "service number"
    0x2, 0x20, 0x70, 0x61, 0x73, 0x6f, 0x73, 0x0, // @1074 "<> pasos"
    0x2, 0x20, 0x73, 0x74, 0x65, 0x70, 0x73, 0x0, // @1082 "<> steps"
    0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x63, 0x69, 0xf3, 0x6e, 0x0, // @1090 "Configuraci?n"
    0x46, 0x69, 0x6e, 0x64, 0x20, 0x6d, 0x79, 0x20, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x0, // @1104 "Find my phone"
    0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x0, // @1118 "serial number"
    0xcda9, 0xc804, 0xae30, 0xac00, 0xa, 0xc5f0, 0xacb0, 0xb418, 0xc5c8, 0xc2b5, 0xb2c8, 0xb2e4, 0x2e, 0x0, // @1132 "????\n???????."
    0xcda9, 0xc804, 0xae30, 0xac00, 0xa, 0xd574, 0xc81c, 0xb418, 0xc5c8, 0xc2b5, 0xb2c8, 0xb2e4, 0x2e, 0x0, // @1146 "????\n???????."
    0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x20, 0x49, 0x6e, 0x66, 0x6f, 0x0, // @1160 "Network Info"
    0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x69, 0xf3, 0x6e, 0x0, // @1173 "Notificaci?n"
    0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x0, // @1186 "Notification"
    0x53, 0x65, 0x74, 0x20, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x0, // @1199 "Set strength"
    0x57, 0x69, 0x46, 0x69, 0x20, 0x4d, 0x41, 0x43, 0x20, 0x41, 0x44, 0x44, 0x0, // @1212 "WiFi MAC ADD"
    0x57, 0x69, 0x46, 0x69, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x0, // @1225 "WiFi setting"
    0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x0, // @1238 "version info"
    0x76, 0x65, 0x72, 0x73, 0x69, 0xf3, 0x6e, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x0, // @1251 "versi?n info"
    0x42, 0x4c, 0x45, 0x20, 0x4d, 0x41, 0x43, 0x20, 0x41, 0x44, 0x44, 0x0, // @1264 "BLE MAC ADD"
    0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x49, 0x6e, 0x66, 0x6f, 0x0, // @1276 "Device Info"
    0x46, 0x61, 0x6c, 0x6c, 0x73, 0x20, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x0, // @1288 "Falls occur"
    0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x63, 0x69, 0xf3, 0x6e, 0x0, // @1300 "Informaci?n"
    0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x0, // @1312 "Information"
    0x2, 0x20, 0xac78, 0xc74c, 0x0, // @1324 "<> ??"
    0x2, 0x62, 0x70, 0x6d, 0x0, // @1329 "<>bpm"
    0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x0, // @1334 "model name"
    0x27, 0x20, 0x22, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0, // @1345 "' "      "
    0x48, 0x65, 0x61, 0x72, 0x74, 0x72, 0x61, 0x74, 0x65, 0x0, // @1355 "Heartrate"
    0x50, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x66, 0x0, // @1365 "Power off"
    0x52, 0x65, 0x69, 0x6e, 0x69, 0x63, 0x69, 0x61, 0x72, 0x0, // @1375 "Reiniciar"
    0x62, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x0, // @1385 "bluetooth"
    0x28, 0x20, 0x29, 0x20, 0x7c, 0x20, 0x20, 0x20, 0x0, // @1395 "( ) |   "
    0x2, 0x73, 0x0, // @1404 "<>s"
    0x2, 0xcd08, 0x0, // @1407 "<>?"
    0x48, 0xe1, 0x70, 0x74, 0x69, 0x63, 0x6f, 0x73, 0x0, // @1410 "H?pticos"
    0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x0, // @1419 "Language"
    0x50, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x0, // @1428 "Pantalla"
    0xb0b4, 0x20, 0xd734, 0xb300, 0xd3f0, 0x20, 0xcc3e, 0xae30, 0x0, // @1437 "? ??? ??"
    0xd1b5, 0xc2e0, 0x20, 0xc8fc, 0xae30, 0x20, 0xc124, 0xc815, 0x0, // @1446 "?? ?? ??"
    0xd654, 0xba74, 0x20, 0xaebc, 0xc9d0, 0x20, 0xc2dc, 0xac04, 0x0, // @1455 "?? ?? ??"
    0xd654, 0xba74, 0x20, 0xbc1d, 0xae30, 0x20, 0xc870, 0xc808, 0x0, // @1464 "?? ?? ??"
    0x41, 0x70, 0x61, 0x67, 0x61, 0x64, 0x6f, 0x0, // @1473 "Apagado"
    0x45, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x0, // @1481 "English"
    0x45, 0x73, 0x70, 0x61, 0xf1, 0x6f, 0x6c, 0x0, // @1489 "Espa?ol"
    0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x0, // @1497 "Setting"
    0x53, 0x69, 0x73, 0x74, 0x65, 0x6d, 0x61, 0x0, // @1505 "Sistema"
    0x57, 0x69, 0x46, 0x69, 0x20, 0xac80, 0xc0c9, 0x0, // @1513 "WiFi ??"
    0x57, 0x69, 0x46, 0x69, 0x20, 0xc124, 0xc815, 0x0, // @1521 "WiFi ??"
    0xb124, 0xd2b8, 0xc6cc, 0xd06c, 0x20, 0xc815, 0xbcf4, 0x0, // @1529 "???? ??"
    0xc18c, 0xb9ac, 0x20, 0xbc0f, 0x20, 0xc9c4, 0xb3d9, 0x0, // @1537 "?? ? ??"
    0xc804, 0xae30, 0xc790, 0xadf9, 0xa, 0xac15, 0xb3c4, 0x0, // @1545 "????\n??"
    0xc804, 0xae30, 0xc790, 0xadf9, 0xa, 0xc2dc, 0xac04, 0x0, // @1553 "????\n??"
    0xc804, 0xae30, 0xc790, 0xadf9, 0xa, 0xc2dc, 0xc791, 0x0, // @1561 "????\n??"
    0x44, 0x6f, 0x72, 0x6d, 0x69, 0x72, 0x0, // @1569 "Dormir"
    0x46, 0x75, 0x65, 0x72, 0x7a, 0x61, 0x0, // @1576 "Fuerza"
    0x48, 0x61, 0x70, 0x74, 0x69, 0x63, 0x0, // @1583 "Haptic"
    0x49, 0x64, 0x69, 0x6f, 0x6d, 0x61, 0x0, // @1590 "Idioma"
    0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x0, // @1597 "Screen"
    0x53, 0x6f, 0x6e, 0x69, 0x64, 0x6f, 0x0, // @1604 "Sonido"
    0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x0, // @1611 "System"
    0x7b, 0x20, 0x7d, 0x5b, 0x20, 0x5d, 0x0, // @1618 "{ }[ ]"
    0xc11c, 0xbe44, 0xc2a4, 0x20, 0xbc88, 0xd638, 0x0, // @1625 "??? ??"
    0xc2dc, 0xb9ac, 0xc5bc, 0x20, 0xbc88, 0xd638, 0x0, // @1632 "??? ??"
    0x25, 0x20, 0x60, 0x20, 0x2f, 0x0, // @1639 "% ` /"
    0x2e, 0x20, 0x2c, 0x3f, 0x21, 0x0, // @1645 ". ,?!"
    0x3a, 0x20, 0x3b, 0x20, 0x5e, 0x0, // @1651 ": ; ^"
    0x40, 0x20, 0x23, 0x20, 0x24, 0x0, // @1657 "@ # $"
    0x48, 0x65, 0x63, 0x68, 0x6f, 0x0, // @1663 "Hecho"
    0x49, 0x43, 0x43, 0x49, 0x44, 0x0, // @1669 "ICCID"
    0x50, 0x61, 0x73, 0x6f, 0x73, 0x0, // @1675 "Pasos"
    0x52, 0x65, 0x73, 0x65, 0x74, 0x0, // @1681 "Reset"
    0x53, 0x6c, 0x65, 0x65, 0x70, 0x0, // @1687 "Sleep"
    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x0, // @1693 "Sound"
    0x53, 0x74, 0x65, 0x70, 0x73, 0x0, // @1699 "Steps"
    0x61, 0x2f, 0x31, 0x2f, 0x21, 0x0, // @1705 "a/1/!"
    0xac15, 0xb3c4, 0x20, 0xc124, 0xc815, 0x0, // @1711 "?? ??"
    0xad6c, 0xc870, 0x20, 0xc694, 0xccad, 0x0, // @1717 "?? ??"
    0xae30, 0xae30, 0x20, 0xc815, 0xbcf4, 0x0, // @1723 "?? ??"
    0xb099, 0xc0c1, 0x20, 0xac10, 0xc9c0, 0x0, // @1729 "?? ??"
    0xb099, 0xc0c1, 0x20, 0xbc1c, 0xc0dd, 0x0, // @1735 "?? ??"
    0xbc84, 0xc804, 0x20, 0xc815, 0xbcf4, 0x0, // @1741 "?? ??"
    0xc0b0, 0xc18c, 0xd3ec, 0xd654, 0xb3c4, 0x0, // @1747 "?????"
    0xc0dd, 0xccb4, 0x20, 0xc815, 0xbcf4, 0x0, // @1753 "?? ??"
    0xc2dd, 0xbcc4, 0x20, 0xc815, 0xbcf4, 0x0, // @1759 "?? ??"
    0xc54c, 0xb9bc, 0x20, 0xc5c6, 0xc74c, 0x0, // @1765 "?? ??"
    0xc804, 0xc6d0, 0x20, 0xb044, 0xae30, 0x0, // @1771 "?? ??"
    0xd1b5, 0xc2e0, 0x20, 0xc8fc, 0xae30, 0x0, // @1777 "?? ??"
    0x26, 0x2a, 0x20, 0x5f, 0x0, // @1783 "&* _"
    0x30, 0x30, 0x30, 0x30, 0x0, // @1788 "0000"
    0x44, 0x6f, 0x6e, 0x65, 0x0, // @1793 "Done"
    0x49, 0x4d, 0x45, 0x49, 0x0, // @1798 "IMEI"
    0x53, 0x70, 0x6f, 0x32, 0x0, // @1803 "Spo2"
    0x7e, 0x3d, 0x2d, 0x2b, 0x0, // @1808 "~=-+"
    0xac78, 0xc74c, 0x20, 0xc218, 0x0, // @1813 "?? ?"
    0x59, 0x65, 0x73, 0x0, // @1818 "Yes"
    0x61, 0x62, 0x63, 0x0, // @1822 "abc"
    0x64, 0x65, 0x66, 0x0, // @1826 "def"
    0x67, 0x68, 0x69, 0x0, // @1830 "ghi"
    0x6a, 0x6b, 0x6c, 0x0, // @1834 "jkl"
    0x6d, 0x6e, 0x6f, 0x0, // @1838 "mno"
    0x70, 0x71, 0x72, 0x0, // @1842 "pqr"
    0x73, 0x74, 0x75, 0x0, // @1846 "stu"
    0x76, 0x77, 0x78, 0x0, // @1850 "vwx"
    0xbaa8, 0xb378, 0xba85, 0x0, // @1854 "???"
    0xc2dc, 0xc2a4, 0xd15c, 0x0, // @1858 "???"
    0xc2ec, 0xbc15, 0xc218, 0x0, // @1862 "???"
    0xcd08, 0xae30, 0xd654, 0x0, // @1866 "???"
    0xd55c, 0xad6d, 0xc5b4, 0x0, // @1870 "???"
    0x30, 0xa, 0x0, // @1874 "0\n"
    0x31, 0x32, 0x0, // @1877 "12"
    0x4e, 0x6f, 0x0, // @1880 "No"
    0x53, 0xed, 0x0, // @1883 "S?"
    0x79, 0x7a, 0x0, // @1886 "yz"
    0xc18c, 0xb9ac, 0x0, // @1889 "??"
    0xc218, 0xba74, 0x0, // @1892 "??"
    0xc54c, 0xb9bc, 0x0, // @1895 "??"
    0xc5b8, 0xc5b4, 0x0, // @1898 "??"
    0xc644, 0xb8cc, 0x0, // @1901 "??"
    0xc885, 0xb8cc, 0x0, // @1904 "??"
    0xcde8, 0xc18c, 0x0, // @1907 "??"
    0xd654, 0xba74, 0x0, // @1910 "??"
    0x31, 0x0, // @1913 "1"
    0x33, 0x0, // @1915 "3"
    0x34, 0x0, // @1917 "4"
    0x35, 0x0, // @1919 "5"
    0x36, 0x0, // @1921 "6"
    0x37, 0x0, // @1923 "7"
    0x38, 0x0, // @1925 "8"
    0x39, 0x0 // @1927 "9"
};

TEXT_LOCATION_FLASH_PRAGMA
KEEP extern const uint32_t indicesGb[] TEXT_LOCATION_FLASH_ATTRIBUTE;

TEXT_LOCATION_FLASH_PRAGMA
KEEP extern const uint32_t indicesKorean[] TEXT_LOCATION_FLASH_ATTRIBUTE;

TEXT_LOCATION_FLASH_PRAGMA
KEEP extern const uint32_t indicesSpanish[] TEXT_LOCATION_FLASH_ATTRIBUTE;

// Array holding dynamically installed languages
struct TranslationHeader
{
    uint32_t offset_to_texts;
    uint32_t offset_to_indices;
    uint32_t offset_to_typedtext;
};
static const TranslationHeader* languagesArray[3] = { 0 };

// Compiled and linked in languages
static const uint32_t* const staticLanguageIndices[] = {
    indicesGb,
    indicesKorean,
    indicesSpanish
};

touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 3)
    {
        if (languagesArray[id] != 0)
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
            currentLanguageIndices = staticLanguageIndices[id];
            currentLanguageTypedText = typedTextDatabaseArray[id];
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
    }
}

void touchgfx::Texts::setTranslation(touchgfx::LanguageId id, const void* translation)
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
}
